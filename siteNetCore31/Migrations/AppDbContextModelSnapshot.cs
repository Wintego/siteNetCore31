// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using siteNetCore31.Domain;

namespace siteNetCore31.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "DCCC3E92-3165-4807-A95D-F8BB0E4270A3",
                            ConcurrencyStamp = "671ad8dd-59fa-4547-bb27-31d9f391f5e1",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "8704E50D-8A81-4CFD-BE85-8C1540FC1BF6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "021cee6d-8b4e-401d-96b6-9de443b0a7db",
                            Email = "info@mossanservice.ru",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedUserName = "NETCORE",
                            PasswordHash = "AQAAAAEAACcQAAAAELy69BQMu1NsEIyn3ZNFtVa2PYlubP0rkVRmI2WYvLTbaE+Dvwwd4hDNlScfFT1Zhg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "netcore"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "8704E50D-8A81-4CFD-BE85-8C1540FC1BF6",
                            RoleId = "DCCC3E92-3165-4807-A95D-F8BB0E4270A3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("siteNetCore31.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("H1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("309035c6-9489-41ca-a395-717243880814"),
                            DateCreated = new DateTime(2020, 7, 3, 11, 44, 29, 752, DateTimeKind.Utc).AddTicks(494),
                            DateUpdated = new DateTime(2020, 7, 3, 11, 44, 29, 752, DateTimeKind.Utc).AddTicks(494),
                            H1 = "По умолчанию",
                            Url = "default"
                        });
                });

            modelBuilder.Entity("siteNetCore31.Domain.Entities.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("H1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a241dd18-e497-40be-8504-4deaaca2c6cf"),
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            H1 = "Главная",
                            Text = @"<div id=""slider"" class=""inspiro-slider slider-fullscreen dots-creative"" data-fade=""true"">
            <div class=""slide"" data-bg-video=""video/ses.mp4"">
                <div class=""bg-overlay""></div>
                <div class=""container"">
                    <div class=""slide-captions text-left text-light"">
                        <h1>Санэпидемстанция №1 по Москве и области</h1>
                        <p class=""text-small"">Официальная СЭС предоставляет населению услуги по уничтожению насекомых, грызунов, оформлению санитарной документации для открытия бизнеса, а так же производит лабораторный анализ воды, воздуха, почвы и продуктов питания.</p>
                        <div><a href=""#welcome"" class=""btn scroll-to"">Подробнее</a></div>
                    </div>
                </div>
            </div>
        </div>
            <section id=""welcome"" class=""p-b-0"">
                <div class=""container"">
                    <div class=""heading-text heading-section text-center m-b-40"" data-animate=""fadeInUp"">
                        <h2>О САНЭПИДЕМСТАНЦИИ</h2>
                        <span class=""lead"">Create amam ipsum dolor sit amet, Beautiful nature, and rare feathers!.</span>
                    </div>
                    <div class=""row"" data-animate=""fadeInUp"">
                        <div class=""col-lg-12"">
                            <img class=""img-fluid"" src=""/images/other/main.png"" alt=""@Config.CompanyName"">
                        </div>
                    </div>
                </div>
            </section>
            <section class=""background-grey"">
                <div class=""container"">
                    <div class=""heading-text heading-section"">
                        <h2>НАШИ ПРЕИМУЩЕСТВА</h2>
                        <span class=""lead"">Create amam ipsum dolor sit amet, Beautiful nature, and rare feathers!.</span>
                    </div>
                    <div class=""row"">
                        <div class=""col-lg-4"">
                            <div data-animate=""fadeInUp"" data-animate-delay=""0"">
                                <h4>Премиум препараты</h4>
                                <p>Использование исключительно сертифицированных, отличающихся высоким уровнем безопасности для человека и животных химических препаратов.</p>
                            </div>
                        </div>
                        <div class=""col-lg-4"">
                            <div data-animate=""fadeInUp"" data-animate-delay=""200"">
                                <h4>Индивидуальный подход</h4>
                                <p>Мы всегда проводим предварительную оценку ситуации до того, как начать обработку, предлагаем возможности для выбора препаратов, применяемых при химической дезинсекции или дезинфекции.</p>
                            </div>
                        </div>
                        <div class=""col-lg-4"">
                            <div data-animate=""fadeInUp"" data-animate-delay=""400"">
                                <h4>Эксперты высшего класса</h4>
                                <p>Мы не нанимаем случайных людей. Каждый сотрудник - настоящий профессионал в своей области, делающий работу добросовестно и качественно.</p>
                            </div>
                        </div>
                        <div class=""col-lg-4"">
                            <div data-animate=""fadeInUp"" data-animate-delay=""600"">
                                <h4>Гарантия</h4>
                                <p>На все услуги предоставляется гарантия</p>
                            </div>
                        </div>
                        <div class=""col-lg-4"">
                            <div data-animate=""fadeInUp"" data-animate-delay=""800"">
                                <h4>Цены</h4>
                                <p>Вы можете уточнить наличие действующих скидок и акций у специалиста при заказе услуги по телефону.</p>
                            </div>
                        </div>
                        <div class=""col-lg-4"">
                            <div data-animate=""fadeInUp"" data-animate-delay=""1000"">
                                <h4>Режим работы</h4>
                                <p>Если вы можете принять специалистов только в вечернее время или рано утром - это обязательно будет учтено нашими специалистами.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section>
                <div class=""container"">
                    <div class=""heading-text heading-section text-center"">
                        <h2>Наши услуги</h2>
                        <p>
                            Lorem ipsum dolor sit amet, consecte adipiscing elit. Suspendisse condimentum porttitor cursumus.
                        </p>
                    </div>
                    <div class=""row"">
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""0"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-squirrel""></i>
                                </div>
                                <h3>Дератизация</h3>
                                <p>
                                    Борьба с грызунами в городе и на дачных участках по-прежнему весьма актуальна
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""200"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-bug""></i>
                                </div>
                                <h3>Дезинсекция</h3>
                                <p>
                                    Уничтожение клопов, тараканов и других насекомых в квартире и на участке
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""400"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-viruses""></i>
                                </div>
                                <h3>Дезинфекция</h3>
                                <p>
                                    Патогенные возбудители представляют серьезную опасность и для предприятий общепита, и для обычных людей
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""600"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""far fa-smoking""></i>
                                </div>
                                <h3>Дезодорация</h3>
                                <p>
                                    Уничтожение неприятных запахов в квартире и автомобиле
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""800"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-pallet-alt""></i>
                                </div>
                                <h3>Фумигация</h3>
                                <p>
                                    Подготовка тары к перевозке грузов входит в перечень требований, обязательных для международных перевозок
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""1000"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-flask""></i>
                                </div>
                                <h3>Лабораторные анализы</h3>
                                <p>
                                    Проведение анализов позволяет обеспечить максимальную точность исследования
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""1200"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-file-certificate""></i>
                                </div>
                                <h3>Документация</h3>
                                <p>
                                    Оформление, а также разработка санитарной документации для предприятий и организаций
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""1400"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-toilet""></i>
                                </div>
                                <h3>Канализация</h3>
                                <p>
                                    Чистка труб канализации, устранение засоров
                                </p>
                            </div>
                        </div>
                        <div class=""col-lg-4"" data-animate=""fadeInUp"" data-animate-delay=""1600"">
                            <div class=""icon-box effect medium border small"">
                                <div class=""icon"">
                                    <i class=""fa fa-wind""></i>
                                </div>
                                <h3>Вентиляция</h3>
                                <p>
                                    Очистка вентиляционных систем, воздуховодов, дымоходов
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section class=""text-light p-t-150 p-b-150 "" data-bg-parallax=""images/parallax/12.jpg"">
                <div class=""bg-overlay""></div>
                <div class=""container"">
                    <div class=""row"">
                        <div class=""col-lg-3"">
                            <div class=""text-center"">
                                <div class=""icon""><i class=""fa fa-3x fa-city""></i></div>
                                <div class=""counter""> <span data-speed=""3000"" data-refresh-interval=""50"" data-to=""124162"" data-from=""600"" data-seperator=""true""></span> </div>
                                <div class=""seperator seperator-small""></div>
                                <p>КВАРТИР</p>
                            </div>
                        </div>
                        <div class=""col-lg-3"">
                            <div class=""text-center"">
                                <div class=""icon""><i class=""fa fa-3x fa-industry""></i></div>
                                <div class=""counter""> <span data-speed=""4500"" data-refresh-interval=""23"" data-to=""1365"" data-from=""100"" data-seperator=""true""></span> </div>
                                <div class=""seperator seperator-small""></div>
                                <p>ПРЕДПРИЯТИЙ</p>
                            </div>
                        </div>
                        <div class=""col-lg-3"">
                            <div class=""text-center"">
                                <div class=""icon""><i class=""fa fa-3x fa-bug""></i></div>
                                <div class=""counter""> <span data-speed=""3000"" data-refresh-interval=""12"" data-to=""23021841"" data-from=""50"" data-seperator=""true""></span> </div>
                                <div class=""seperator seperator-small""></div>
                                <p>НАСЕКОМЫХ УНИЧТОЖЕНО</p>
                            </div>
                        </div>
                        <div class=""col-lg-3"">
                            <div class=""text-center"">
                                <div class=""icon""><i class=""fa fa-3x fa-vial""></i></div>
                                <div class=""counter""> <span data-speed=""4550"" data-refresh-interval=""50"" data-to=""14825"" data-from=""48"" data-seperator=""true""></span> </div>
                                <div class=""seperator seperator-small""></div>
                                <p>АНАЛИЗОВ ПРОВЕДЕНО</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <section class=""p-t-60"">
                <div class=""container"">
                    <div class=""heading-text heading-section text-center"">
                        <h2>Наши клиенты</h2>
                        <span class=""lead"">Наши замечательные клиенты, с которыми нам было приятно работать! </span>
                    </div>
                    <div class=""carousel client-logos"" data-items=""6"" data-items-sm=""4"" data-items-xs=""3"" data-items-xxs=""2"" data-margin=""20"" data-arrows=""false"" data-autoplay=""true"" data-autoplay=""3000"" data-loop=""true"">
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/1.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/2.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/3.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/4.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/5.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/6.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/7.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/8.png""> </a>
                        </div>
                        <div>
                            <a href=""#""><img alt="""" src=""images/clients/9.png""> </a>
                        </div>
                    </div>
                </div>
            </section>
            <section class=""background-grey"">
                <div class=""container"">
                    <div class=""heading-text heading-section text-center"">
                        <h2>ПОЗНАКОМЬТЕСЬ С НАШЕЙ КОМАНДОЙ</h2>
                        <p>
                            Lorem ipsum dolor sit amet, consecte adipiscing elit. Suspendisse condimentum porttitor cursumus.
                        </p>
                    </div>
                    <div class=""row team-members"">
                        <div class=""col-lg-3"">
                            <div class=""team-member"">
                                <div class=""team-image"">
                                    <img src=""images/team/1.jpg"">
                                </div>
                                <div class=""team-desc"">
                                    <h3>Дмитрий Сергеевич</h3>
                                    <span>Директор</span>
                                    <p>Организация, координация и контроль работы предприятия </p>
                                    <div class=""align-center"">
                                        <a class=""btn btn-xs btn-slide btn-light"" href=""mailto:director@mail.ru"" data-width=""80"">
                                            <i class=""icon-mail""></i>
                                            <span>Mail</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""col-lg-3"">
                            <div class=""team-member"">
                                <div class=""team-image"">
                                    <img src=""images/team/2.jpg"">
                                </div>
                                <div class=""team-desc"">
                                    <h3>Алёна Семёнова</h3>
                                    <span>Менеджер-лаборант</span>
                                    <p>Консультирование клиентов, контроль проведения лабораторных анализов</p>
                                    <div class=""align-center"">
                                        <a class=""btn btn-xs btn-slide btn-light"" target=""_blank"" href=""https://t.me/sesalena"" data-width=""100"">
                                            <i class=""fab fa-telegram""></i>
                                            <span>Telegram</span>
                                        </a>
                                        <a class=""btn btn-xs btn-slide btn-light"" href=""mailto:@Config.CompanyEmail?subject=Для%20Алёны"" data-width=""80"">
                                            <i class=""icon-mail""></i>
                                            <span>Email</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""col-lg-3"">
                            <div class=""team-member"">
                                <div class=""team-image"">
                                    <img src=""images/team/3.jpg"">
                                </div>
                                <div class=""team-desc"">
                                    <h3>Екатерина Куравлева</h3>
                                    <span>Менеджер</span>
                                    <p>Приём входящих звонков, консультирование </p>
                                    <div class=""align-center"">
                                        <a class=""btn btn-xs btn-slide btn-light"" target=""_blank"" href=""https://t.me/sesekaterina"" data-width=""100"">
                                            <i class=""fab fa-telegram""></i>
                                            <span>Telegram</span>
                                        </a>
                                        <a class=""btn btn-xs btn-slide btn-light"" href=""mailto:@Config.CompanyEmail?subject=Для%20Екатерины"" data-width=""80"">
                                            <i class=""icon-mail""></i>
                                            <span>Email</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""col-lg-3"">
                            <div class=""team-member"">
                                <div class=""team-image"">
                                    <img src=""images/team/4.jpg"">
                                </div>
                                <div class=""team-desc"">
                                    <h3>Ксения Житова</h3>
                                    <span>Менеджер</span>
                                    <p>Приём входящих звонков, консультирование </p>
                                    <div class=""align-center"">
                                        <a class=""btn btn-xs btn-slide btn-light"" target=""_blank"" href=""https://t.me/seskseniya"" data-width=""100"">
                                            <i class=""fab fa-telegram""></i>
                                            <span>Telegram</span>
                                        </a>
                                        <a class=""btn btn-xs btn-slide btn-light"" href=""mailto:@Config.CompanyEmail?subject=Для%20Ксении"" data-width=""80"">
                                            <i class=""icon-mail""></i>
                                            <span>Email</span>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>",
                            Url = "index"
                        });
                });

            modelBuilder.Entity("siteNetCore31.Domain.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("H1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPopular")
                        .HasColumnType("bit");

                    b.Property<string>("seoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("666599d8-eac4-4f43-9f15-b7063c583b76"),
                            CategoryId = new Guid("309035c6-9489-41ca-a395-717243880814"),
                            DateCreated = new DateTime(2020, 7, 3, 11, 44, 29, 752, DateTimeKind.Utc).AddTicks(494),
                            DateUpdated = new DateTime(2020, 7, 3, 11, 44, 29, 752, DateTimeKind.Utc).AddTicks(494),
                            H1 = "Услуга 1",
                            Url = "usluga-1",
                            isPopular = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("siteNetCore31.Domain.Entities.Service", b =>
                {
                    b.HasOne("siteNetCore31.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
